#---------------------------------------
# Evaluación de productos de precipitación satelital (PPS)
#---------------------------------------

# Cargar librerías necesarias
library(zoo)
library(hydroGOF)
library(xts)
library(hydroTSM)
library(readxl)

# Fijar el directorio de trabajo
setwd("C:/Users/User/Downloads")
getwd()

# Importar los datos desde archivos Excel
dato_obs <- read_xls("obs.xls")
dato_sim <- read_xls("sim.xls")

# Convertir a series de tiempo zoo
obs <- zoo(dato_obs[, -1], order.by = as.Date(dato_obs$fecha))
sim <- zoo(dato_sim[, -1], order.by = as.Date(dato_sim$fecha))

#---------------------------------------
# Evaluación para una estación (columna 1)
#---------------------------------------

# Graficar la serie de tiempo observada
plot.zoo(as.zoo(obs[, 1]), main = "Observaciones - Estación 1")

# Calcular métricas de eficiencia diarias
eval_diaria <- gof(sim[, 1], obs[, 1])
print(eval_diaria)

# Gráfico de comparación de las series observada y simulada diarias
ggof(sim = sim[, 1], obs = obs[, 1], col = c("red", "blue"),
     gofs = c("NSE", "KGE", "R2", "RMSE", "PBIAS"), main = "Comparación Diaria")

# Calcular totales mensuales
obs_mensual <- apply.monthly(obs[, 1], sum)
sim_mensual <- apply.monthly(sim[, 1], sum)

# Calcular métricas de eficiencia mensuales
eval_mensual <- gof(sim_mensual, obs_mensual)
print(eval_mensual)

# Gráfico de comparación de series temporales mensuales
ggof(sim = sim_mensual, obs = obs_mensual, ftype = "ma", FUN = mean, col = c("red", "blue"),
     gofs = c("NSE", "KGE", "R2", "RMSE", "PBIAS"), main = "Comparación Mensual")

#---------------------------------------
# Evaluación para múltiples estaciones
#---------------------------------------

# Inicializar data frames para almacenar los resultados de todas las estaciones
resultados_diarios <- data.frame(matrix(ncol = ncol(obs), nrow = 5))
resultados_mensuales <- data.frame(matrix(ncol = ncol(obs), nrow = 5))

# Nombres de las filas para las métricas
rownames(resultados_diarios) <- c("NSE", "KGE", "R2", "RMSE", "PBIAS")
rownames(resultados_mensuales) <- c("NSE", "KGE", "R2", "RMSE", "PBIAS")

# Calcular métricas para cada estación
for (i in 1:ncol(obs)) {
  
  # Series de cada estación
  obs_estacion <- obs[, i]
  sim_estacion <- sim[, i]
  
  # Evaluación diaria
  eval_diaria_est <- gof(sim_estacion, obs_estacion)
  resultados_diarios[, i] <- eval_diaria_est[1:5] # Asumiendo que gof devuelve las métricas en el mismo orden
  
  # Evaluación mensual
  obs_mensual_est <- apply.monthly(obs_estacion, sum)
  sim_mensual_est <- apply.monthly(sim_estacion, sum)
  eval_mensual_est <- gof(sim_mensual_est, obs_mensual_est)
  resultados_mensuales[, i] <- eval_mensual_est[1:5] # Asumiendo que gof devuelve las métricas en el mismo orden
}

# Asignar nombres de columnas
colnames(resultados_diarios) <- colnames(obs)
colnames(resultados_mensuales) <- colnames(obs)

# Mostrar resultados diarios por estación
print("Resultados Diarios por Estación:")
print(resultados_diarios)

# Mostrar resultados mensuales por estación
print("Resultados Mensuales por Estación:")
print(resultados_mensuales)
#---------------------------------------
